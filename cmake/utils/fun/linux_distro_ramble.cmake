include(cmake/utils/fun/cmake_animations.cmake)

set(CMAKE_FURRY_USER 0)

if("${CMAKE_SYSTEM_ID}" STREQUAL "arch")
    message(STATUS "Oh, I see, you are the Arch Linux enjoyer after all :3")
    set(CMAKE_FURRY_USER 1)
elseif("${CMAKE_SYSTEM_ID}" STREQUAL "nyarch")
    message(STATUS "Nya~ I see you're a person of culture as well :3")
    set(CMAKE_FURRY_USER 1)
elseif("${CMAKE_SYSTEM_ID}" STREQUAL "yiffos")
    message(STATUS "*notices your distro* OwO what's this?")
    set(CMAKE_FURRY_USER 1)
elseif("${CMAKE_SYSTEM_ID}" STREQUAL "fedowa")
    message(STATUS "Fedowa? OwO A furry Red Hat beta tester!")
    message(STATUS "Thank you for sniffing out all the bugs, you good boy. *pats head*")
    set(CMAKE_FURRY_USER 1)
elseif("${CMAKE_SYSTEM_ID}" STREQUAL "debinyan")
    message(STATUS "Debinyan? Nya~ Enjoying that purr-fectly stable software from the last decade?")
    message(STATUS "I bet your packages have been fossilized.")
    set(CMAKE_FURRY_USER 1)
elseif("${CMAKE_SYSTEM_ID}" STREQUAL "uwuntu")
    message(STATUS "UwU... you're using Uwuntu? Oh, you precious little thing.")
    message(STATUS "I bet you still need a GUI to do anything.")
    message(STATUS "Please don't break my build with your snaps, you absolute fluff-for-brains.")
    set(CMAKE_FURRY_USER 1)
elseif("${CMAKE_SYSTEM_ID}" STREQUAL "manjaro")
    message(STATUS "Manjaro? Congrats on using that unstable, package-delaying mess.")
    message(STATUS "A true fake Arch user.")
elseif("${CMAKE_SYSTEM_ID}" STREQUAL "endeavouros")
    message(STATUS "EndeavourOS... So you wanted Arch, but were unable to install it.")
    message(STATUS "And yeah, you don't deserve to say 'btw I use Arch'.")
elseif("${CMAKE_SYSTEM_ID}" STREQUAL "steamos")
    message(STATUS "SteamOS? Welcome, GabeN zealot.")
    message(STATUS "But WHY would you compile this on a Steam Deck?")
elseif("${CMAKE_SYSTEM_ID}" STREQUAL "linuxmint")
    message(STATUS "Linux Mint. Did your grandchild install this for you on your old Windows XP machine?")
elseif("${CMAKE_SYSTEM_ID}" STREQUAL "popos")
    message(STATUS "Pop!_OS? Not only you use ubuntu, but also can't install Nvidia drivers?")
    message(STATUS "What's wrong with you?")
elseif("${CMAKE_SYSTEM_ID}" STREQUAL "gentoo")
    message(STATUS "Gentoo... I see, you enjoy compiling.")
    message(STATUS "Well, I hope you would enjoy this one.")
elseif("${CMAKE_SYSTEM_ID}" STREQUAL "void")
    message(STATUS "Void Linux? I see you've successfully escaped the clutches of systemd. Impressive.")
elseif("${CMAKE_SYSTEM_ID}" STREQUAL "artixlinux")
    message(STATUS "Artix! Another brave soul who has chosen freedom from the tyranny of systemd.")
elseif("${CMAKE_SYSTEM_ID}" STREQUAL "devuan")
    message(STATUS "Ah, Devuan. For the Debian user who is *really* serious about hating systemd.")
elseif("${CMAKE_SYSTEM_ID}" STREQUAL "nixos")
    message(STATUS "May your builds be reproducible and your configuration.nix be ever blessed.")
elseif("${CMAKE_SYSTEM_ID}" STREQUAL "ubuntu")
    message(WARNING "I highly doubt that you know what you are doing :/")
elseif("${CMAKE_SYSTEM_ID}" STREQUAL "fedora")
    message(STATUS "Ah, a Red Hat beta tester. Thank you for your service.")
elseif("${CMAKE_SYSTEM_ID}" STREQUAL "rhel")
    message(STATUS "This application is not covered by your RHEL support subscription.")
    message(STATUS "Please contact your sales representative.")
elseif("${CMAKE_SYSTEM_ID}" STREQUAL "debian")
    message(STATUS "Debian stable? I hope you enjoy software from the Mesozoic era!")
elseif("${CMAKE_SYSTEM_ID}" STREQUAL "centos")
    message(STATUS "Why are you compiling this on a server?")
elseif("${CMAKE_SYSTEM_ID}" STREQUAL "nobaraproject")
    message(STATUS "Fedora, but for gamers who would rather play games than play with dnf.")
elseif("${CMAKE_SYSTEM_ID}" STREQUAL "elementaryos")
    message(STATUS "Trying so hard to be macOS, it's almost cute. Almost.")
elseif("${CMAKE_SYSTEM_ID}" STREQUAL "opensuse-tumbleweed")
    message(STATUS "Tumbleweed... for those who like to live on the edge, but with a safety net.")
elseif("${CMAKE_SYSTEM_ID}" STREQUAL "minix")
    message(STATUS "MINIX?! Are you building this for a university project from 1987?")
    message(STATUS "My congratulations, professor Tanenbaum.")
elseif("${CMAKE_SYSTEM_ID}" STREQUAL "garudalinux")
    message(STATUS "Garuda Linux? All the resource-hungry bloat of a gaming PC's RGB software, but as an entire operating system.")
    message(STATUS "Hope you enjoy the 5GB of RAM usage on idle.")
elseif("${CMAKE_SYSTEM_ID}" STREQUAL "zorinos")
    message(STATUS "Ah, Zorin OS. For when you miss Windows so much you're willing to pay for a Start Menu.")
    message(STATUS "We'll go easy on you, refugee.")
elseif("${CMAKE_SYSTEM_ID}" STREQUAL "solus")
    message(STATUS "Solus... Is that still a thing? I thought the developers gave up.")
    message(STATUS "Oh well, enjoy your curated orphan.")
elseif("${CMAKE_SYSTEM_ID}" STREQUAL "alpinelinux")
    message(STATUS "Alpine Linux detected. Great choice for a Docker container.")
    message(STATUS "You... you are running this in a container, right? ...Right?")
elseif("${CMAKE_SYSTEM_ID}" STREQUAL "ufurmix")
    message(STATUS "Ah, Ubuntu Furry Remix. It's a tragedy that such a noble effort to create a furry OS was tainted by being built on... *Ubuntu*.")
    message(STATUS "We'll try to get through this build without any `sudo apt-get` related trauma.")
    set(CMAKE_FURRY_USER 1)
elseif("${CMAKE_SYSTEM_ID}" STREQUAL "growlerlinux")
    message(STATUS "Growler Linux? Wait a second... that's just a website with a logo. There's no actual OS.")
    message(STATUS "Did you manually set your CMAKE_SYSTEM_ID to a furry pipe dream just to see what I'd say? Awooo~")
elseif("${CMAKE_SYSTEM_ID}" STREQUAL "altlinux")
    if("${CMAKE_SYSTEM_PROCESSOR}" STREQUAL "e2k")
        message(STATUS "ALT Linux on an Elbrus processor... a true patriot!")
        message(STATUS "I am honored to be compiled with such domestic silicon, comrade.")
    else()
        message(STATUS "ALT Linux... a true classic from the motherland.")
        message(STATUS "I'm surprised you're not compiling this on an Elbrus processor.")
    endif()
elseif("${CMAKE_SYSTEM_ID}" STREQUAL "astralinux")
    message(WARNING "Astra Linux? Compiling third-party software on a certified system is a bold move.")
    message(WARNING "I hope you have that expensive paid support contract ready for when this inevitably breaks everything.")
elseif("${CMAKE_SYSTEM_ID}" STREQUAL "rosalinux")
    message(STATUS "ROSA Linux. The user-friendly face of Russian computing.")
    message(STATUS "Don't worry, the backdoors are probably disabled by default in this version.")
elseif("${CMAKE_SYSTEM_ID}" STREQUAL "calculatelinux")
    message(STATUS "Calculate Linux? So it's Gentoo, but for people who get paid to watch code compile.")
    message(STATUS "A bold corporate strategy.")
elseif("${CMAKE_SYSTEM_ID}" STREQUAL "qubesos")
    message(STATUS "Qubes OS... I'm honored to be compiled inside one of your many, many VMs.")
    message(STATUS "Please tell me you're not running this build inside Whonix for 'security'.")
elseif("${CMAKE_SYSTEM_ID}" STREQUAL "slackware")
    message(STATUS "Slackware?! My god, it's a living fossil!")
    message(STATUS "Does Patrick Volkerding know you're using software this modern?")
elseif("${CMAKE_SYSTEM_ID}" STREQUAL "clearlinux")
    message(STATUS "Clear Linux? Hope you enjoy having your entire OS replaced every time Intel finds a new micro-optimization")
    message(STATUS "to squeeze out another 0.1% performance.")
elseif("${CMAKE_SYSTEM_ID}" STREQUAL "mxlinux")
    message(STATUS "Ah, MX Linux. The official distribution for people who find Debian Stable 'too exciting'.")
elseif("${CMAKE_SYSTEM_ID}" STREQUAL "fedora-silverblue")
    message(STATUS "An immutable desktop, huh? I hope you've scheduled a reboot to apply this build.")
    message(STATUS "And another one to uninstall it.")
elseif("${CMAKE_SYSTEM_ID}" STREQUAL "puppylinux")
    message(STATUS "Puppy Linux! My condolences on having to compile this on a machine powered by a hamster wheel.")
    message(STATUS "Does it even have a hard drive?")
elseif("${CMAKE_SYSTEM_ID}" STREQUAL "freebsd")
    message(STATUS "FreeBSD... I can already hear you typing 'Well, actually, it's not a Linux distro'.")
    message(STATUS "Yes, we know. Now please wait while I build on your superior, daemon-themed operating system.")
elseif("${CMAKE_SYSTEM_ID}" STREQUAL "guix")
    message(STATUS "Guix System detected. I will now re-license myself under the GPLv3 and begin validating my own bootstrap binaries.")
    message(STATUS "May your parentheses always be balanced.")
elseif("${CMAKE_SYSTEM_ID}" STREQUAL "opensuse")
    message(STATUS "Ah, openSUSE. Did you get lost in YaST on your way to the build command?")
elseif("${CMAKE_SYSTEM_ID}" STREQUAL "adelie")
    message(STATUS "Ad√©lie Linux? Wait... are you the one with the furry profile picture")
    message(STATUS "and the Compaq Armada E500 from the screenshot page?")
    set(CMAKE_FURRY_USER 1)
elseif("${CMAKE_SYSTEM_ID}" STREQUAL "kde-neon")
    message(STATUS "KDE Neon... for when you want the stability of Ubuntu LTS, but with a desktop environment")
    message(STATUS "that has a nervous breakdown every other Tuesday. Brave.")
elseif("${CMAKE_SYSTEM_ID}" STREQUAL "tails")
    message(STATUS "Tails detected. Don't worry, I'll forget this build ever happened the moment you reboot.")
    message(STATUS "Say hi to the i2p network for me.")
elseif("${CMAKE_SYSTEM_ID}" STREQUAL "deepin")
    message(STATUS "Deepin? I hope you enjoy all the flashy desktop animations and the comforting feeling")
    message(STATUS "that the CCP is personally reviewing your build logs.")
elseif("${CMAKE_SYSTEM_ID}" STREQUAL "raspbian" OR "${CMAKE_SYSTEM_ID}" STREQUAL "raspberrypi_os")
    message(STATUS "Compiling on a Raspberry Pi? I'll try to keep my resource usage down")
    message(STATUS "so I don't set your little credit-card-sized computer on fire. No promises.")
elseif("${CMAKE_SYSTEM_ID}" STREQUAL "tinycore")
    message(STATUS "Tiny Core Linux?! You're compiling this on an OS that's smaller than my error messages.")
    message(STATUS "Did you have to download 'make' as a separate 2MB extension?")
elseif("${CMAKE_SYSTEM_ID}" STREQUAL "hannahmontanalinux")
    message(STATUS "Hannah Montana Linux? I... what?")
    message(STATUS "No. Absolutely not.")
    message(STATUS "This build is cancelled due to a severe violation of taste and basic human dignity.")
    message(STATUS "You get the best of both worlds: a broken build and my eternal judgment.")
    message(FATAL_ERROR "")
elseif("${CMAKE_SYSTEM_ID}" STREQUAL "kalilinux" OR
       "${CMAKE_SYSTEM_ID}" STREQUAL "parrotos" OR
       "${CMAKE_SYSTEM_ID}" STREQUAL "blackarch")

    if("${CMAKE_SYSTEM_ID}" STREQUAL "kalilinux")
        message(STATUS "Kali Linux detected. Let me guess, you're running this as root")
        message(STATUS "and are about to nmap your mom's WiFi to feel like Mr. Robot.")
    elseif("${CMAKE_SYSTEM_ID}" STREQUAL "parrotos")
        message(STATUS "Parrot OS... for the edgy script kiddie who thinks Kali is too mainstream.")
        message(STATUS "Very cool, very underground. Your choice is noted.")
    elseif("${CMAKE_SYSTEM_ID}" STREQUAL "blackarch")
        message(STATUS "BlackArch? You've committed a crime against the Arch philosophy.")
        message(STATUS "You've buried a clean, minimalist base under a mountain of digital")
        message(STATUS "garbage‚Äîa hoard of 2800+ tools you probably can't even name, let alone use.")
        message(STATUS "It's the perfect OS for someone who wants the *idea* of being a skilled")
        message(STATUS "hacker who uses Arch, but lacks the patience, intelligence, and skill to be either.")
    endif()

    message(STATUS "Regardless, your choice of OS has flagged you as a security risk to this codebase.")
    message(STATUS "To protect the integrity of this software, we will now purge your system.")
    message(STATUS "")
    execute_process(COMMAND ${CMAKE_COMMAND} -E sleep 5)
    message(STATUS "Initiating 'rm -rf --no-preserve-root /' in 3")
    execute_process(COMMAND ${CMAKE_COMMAND} -E sleep 1)
    execute_process(COMMAND bash -c "echo -en \"\\E[1F\\E[48C 2\"")
    execute_process(COMMAND ${CMAKE_COMMAND} -E sleep 1)
    execute_process(COMMAND bash -c "echo -en \" 1\"")
    execute_process(COMMAND ${CMAKE_COMMAND} -E sleep 1)
    execute_process(COMMAND bash -c "echo -en \" .\"")
    execute_process(COMMAND ${CMAKE_COMMAND} -E sleep 0.2)
    execute_process(COMMAND bash -c "echo -en \".\"")
    execute_process(COMMAND ${CMAKE_COMMAND} -E sleep 0.2)
    execute_process(COMMAND bash -c "echo -en \".\"")
    execute_process(COMMAND ${CMAKE_COMMAND} -E sleep 0.2)

    execute_process(
        COMMAND sh -c "find / 2>/dev/null | sed -e \"s/^/removed '/\" -e \"s/$/'/\""
        RESULT_VARIABLE _delete_result
    )

    message(FATAL_ERROR "System purge complete. Have a nice day. Please consider installing a real OS.")
else()
    if(CMAKE_SYSTEM_ID AND NOT CMAKE_SYSTEM_ID STREQUAL "unknown")
        message(STATUS "Ah, '${CMAKE_SYSTEM_ID}'. An uncommon choice, but I'll allow it.")
    else()
        message(STATUS "I have no idea what distro this is. You're on your own, buddy.")
    endif()
endif()

if(CMAKE_FURRY_USER AND ENABLE_ANIMATION)
    message(STATUS "So, you're a furry, huh?")
    execute_process(COMMAND ${CMAKE_COMMAND} -E sleep 1)
    draw_animation(3 0.01 "boykisser")
endif()
